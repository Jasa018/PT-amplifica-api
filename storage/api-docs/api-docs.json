{
    "openapi": "3.0.0",
    "info": {
        "title": "PT Amplifica API Documentation",
        "description": "API Documentation for the PT Amplifica project",
        "contact": {
            "email": "your-email@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate user and get API token",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Revoke the current user's API token",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logout successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logs": {
            "get": {
                "tags": [
                    "Logs"
                ],
                "summary": "Get application logs",
                "operationId": "07258c00ce1b2cbc7c7151a7cc8ca986",
                "parameters": [
                    {
                        "name": "level",
                        "in": "query",
                        "description": "Filter logs by level (info, warning, error)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Filter logs by store ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search logs by message or context",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Log"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get all orders",
                "operationId": "2cd7e03021e72d9d799c12dfe179c865",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Order"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new order",
                "operationId": "d690d6834318e9b064df441e854de8b9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Order"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/orders/{order}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get a specific order",
                "operationId": "f090f23952a43521af6f1d133826bc37",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "ID of the order to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Update a specific order",
                "operationId": "9f326acfc8febad161872da8dc13508f",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "ID of the order to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Order"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Orders"
                ],
                "summary": "Delete a specific order",
                "operationId": "173211a50d204e6c949d9b18baa95efb",
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "description": "ID of the order to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Order deleted successfully"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get all products",
                "operationId": "1bfaa78d1c2c3848ab8165c5dadcad3e",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "operationId": "e8185e307706e2cd84bbcf5171e2f09d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products/{product}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get a specific product",
                "operationId": "05f6ffcb49f47b4f4fc1a1c21ed60011",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "ID of the product to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update a specific product",
                "operationId": "c474d1318e5b8c3de1f4d52b6053111f",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "ID of the product to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete a specific product",
                "operationId": "1a0a353d0842ff4f9347bb66ec53e3ea",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "ID of the product to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Product deleted successfully"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/stores": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "Get all stores",
                "operationId": "789854b8f9730d47f1ba52ca5e610238",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Store"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Stores"
                ],
                "summary": "Create a new store",
                "operationId": "5562ee6fb25788924172167093719fe9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Store"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Store created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Store"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/stores/{store}": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "Get a specific store",
                "operationId": "a9949c633f955f3c2892647c05d80ac5",
                "parameters": [
                    {
                        "name": "store",
                        "in": "path",
                        "description": "ID of the store to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Store"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Stores"
                ],
                "summary": "Update a specific store",
                "operationId": "31509a6b36a157a0207cdf8f82394d81",
                "parameters": [
                    {
                        "name": "store",
                        "in": "path",
                        "description": "ID of the store to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Store"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Store updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Store"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Stores"
                ],
                "summary": "Delete a specific store",
                "operationId": "d85a9563ceec3d622401123020ca99f6",
                "parameters": [
                    {
                        "name": "store",
                        "in": "path",
                        "description": "ID of the store to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Store deleted successfully"
                    },
                    "404": {
                        "description": "Store not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "operationId": "c457726701591d1183b53aa71fc13441",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "operationId": "592819a0265360b2014512d6dbfaf0e7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a specific user",
                "operationId": "36a33ff774d5cba33c039dec2c3e0287",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update a specific user",
                "operationId": "b9091397c8b25f12c6adb74be6ce3a5a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a specific user",
                "operationId": "fa56cffde745d3f152f95cbacd936c0b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Log": {
                "title": "Log",
                "description": "Log model",
                "properties": {
                    "id": {
                        "description": "Log ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "store_id": {
                        "description": "ID of the associated store (if applicable)",
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "level": {
                        "description": "Log level",
                        "type": "string",
                        "enum": [
                            "info",
                            "warning",
                            "error"
                        ]
                    },
                    "message": {
                        "description": "Log message",
                        "type": "string"
                    },
                    "context": {
                        "description": "Additional context data (JSON string)",
                        "type": "object",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Timestamp of log creation",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp of last update",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Log"
                }
            },
            "Order": {
                "title": "Order",
                "description": "Order model",
                "properties": {
                    "id": {
                        "description": "Order ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "store_id": {
                        "description": "ID of the associated store",
                        "type": "integer",
                        "format": "int64"
                    },
                    "platform_order_id": {
                        "description": "Order ID from the e-commerce platform",
                        "type": "string"
                    },
                    "customer_name": {
                        "description": "Name of the customer",
                        "type": "string"
                    },
                    "order_date": {
                        "description": "Date of the order",
                        "type": "string",
                        "format": "date"
                    },
                    "status": {
                        "description": "Status of the order (e.g., pending, completed)",
                        "type": "string"
                    },
                    "total_amount": {
                        "description": "Total amount of the order",
                        "type": "number",
                        "format": "float"
                    },
                    "created_at": {
                        "description": "Timestamp of order creation",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp of last update",
                        "type": "string",
                        "format": "date-time"
                    },
                    "items": {
                        "description": "List of order items",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderItem"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Order"
                }
            },
            "OrderItem": {
                "title": "OrderItem",
                "description": "Order Item model",
                "properties": {
                    "id": {
                        "description": "Order Item ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "order_id": {
                        "description": "ID of the associated order",
                        "type": "integer",
                        "format": "int64"
                    },
                    "platform_product_id": {
                        "description": "Product ID from the e-commerce platform",
                        "type": "string"
                    },
                    "product_name": {
                        "description": "Name of the product",
                        "type": "string"
                    },
                    "quantity": {
                        "description": "Quantity of the product",
                        "type": "integer"
                    },
                    "price": {
                        "description": "Price of the product",
                        "type": "number",
                        "format": "float"
                    },
                    "created_at": {
                        "description": "Timestamp of order item creation",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp of last update",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "OrderItem"
                }
            },
            "Product": {
                "title": "Product",
                "description": "Product model",
                "properties": {
                    "id": {
                        "description": "Product ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "store_id": {
                        "description": "ID of the associated store",
                        "type": "integer",
                        "format": "int64"
                    },
                    "platform_product_id": {
                        "description": "Product ID from the e-commerce platform",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the product",
                        "type": "string"
                    },
                    "sku": {
                        "description": "Stock Keeping Unit",
                        "type": "string"
                    },
                    "price": {
                        "description": "Price of the product",
                        "type": "number",
                        "format": "float"
                    },
                    "image_url": {
                        "description": "URL of the product image",
                        "type": "string",
                        "format": "url"
                    },
                    "created_at": {
                        "description": "Timestamp of product creation",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp of last update",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Product"
                }
            },
            "Store": {
                "title": "Store",
                "description": "Store model",
                "properties": {
                    "id": {
                        "description": "Store ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "description": "ID of the associated user",
                        "type": "integer",
                        "format": "int64"
                    },
                    "platform": {
                        "description": "E-commerce platform (e.g., Shopify, WooCommerce)",
                        "type": "string"
                    },
                    "store_url": {
                        "description": "URL of the store",
                        "type": "string",
                        "format": "url"
                    },
                    "api_key": {
                        "description": "API Key for the store (sensitive, handle with care)",
                        "type": "string"
                    },
                    "api_secret": {
                        "description": "API Secret for the store (sensitive, handle with care)",
                        "type": "string"
                    },
                    "access_token": {
                        "description": "Access Token for the store (sensitive, handle with care)",
                        "type": "string"
                    },
                    "is_deleted": {
                        "description": "Flag indicating if the store is soft deleted",
                        "type": "boolean"
                    },
                    "deleted_at": {
                        "description": "Timestamp of soft deletion",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "description": "Timestamp of store creation",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp of last update",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Store"
                }
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "User's name",
                        "type": "string"
                    },
                    "email": {
                        "description": "User's email address",
                        "type": "string",
                        "format": "email"
                    },
                    "email_verified_at": {
                        "description": "Timestamp of email verification",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "description": "Timestamp of user creation",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp of last update",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Logs",
            "description": "API Endpoints for Application Logs"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Orders",
            "description": "Orders"
        },
        {
            "name": "Products",
            "description": "Products"
        },
        {
            "name": "Stores",
            "description": "Stores"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}